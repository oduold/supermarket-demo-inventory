plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.brandlogs.inventory.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
	implementation 'com.h2database:h2:2.1.214'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


def gitHooksFolder = new File( '.git/hooks' )


def gitHooks = tasks.register('git-hooks') {
	doFirst {
		println 'check if ' + gitHooksFolder + ' exists'
		if(!gitHooksFolder.exists()) {
			println 'creating ' + gitHooksFolder
			gitHooksFolder.mkdirs()
		}
		copy {
			println 'copying pre-commit hook'
			from 'hooks/git-pre-commit.hook'
			into '.git/hooks'
			include 'git-pre-commit.hook'
			rename ('git-pre-commit.hook', 'pre-commit')
		}
	}
	doLast {
		exec {
			println 'changing file permissions for pre-commit hooks'
    		commandLine('chmod', 'a+x', '.git/hooks/pre-commit')
		}
	}
}


tasks.named('test') {
	useJUnitPlatform()
}

